//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Internals.Tools.Ding.HighlightEngine
{
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Internals.Tools.Ding.HighlightEngine.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;profile&gt;
        ///    &lt;delimiter&gt;;:,(){}[]-+*%/=&quot;&apos;~! |\?.&amp;gt;&amp;lt;&amp;#009;&lt;/delimiter&gt;
        ///    &lt;ignoreCase&gt;true&lt;/ignoreCase&gt;
        ///    
        ///    &lt;keywords name=&quot;command&quot; foreground=&quot;Blue&quot;&gt;
        ///        &lt;keyword&gt;ASSOC&lt;/keyword&gt;
        ///        &lt;keyword&gt;AT&lt;/keyword&gt;
        ///        &lt;keyword&gt;ATTRIB&lt;/keyword&gt;
        ///        &lt;keyword&gt;BREAK&lt;/keyword&gt;
        ///        &lt;keyword&gt;CACLS&lt;/keyword&gt;
        ///        &lt;keyword&gt;CALL&lt;/keyword&gt;
        ///        &lt;keyword&gt;CD&lt;/keyword&gt;
        ///        &lt;keyword&gt;CHCP&lt;/keyword&gt;
        ///        &lt;keyword&gt;CHDIR&lt;/keyword&gt;
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string bat {
            get {
                return ResourceManager.GetString("bat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;profile&gt;
        ///    &lt;delimiter&gt;()[]{}\|/+-=:`~*!@#$%^ ,.;&quot;&apos;?&amp;gt;&amp;lt;&amp;#009;&lt;/delimiter&gt;
        ///    &lt;ignoreCase&gt;false&lt;/ignoreCase&gt;
        ///    
        ///    &lt;keywords name=&quot;keyword&quot; foreground=&quot;Blue&quot;&gt;
        ///        &lt;keyword&gt;and&lt;/keyword&gt;
        ///        &lt;keyword&gt;and_eq&lt;/keyword&gt;
        ///        &lt;keyword&gt;asm&lt;/keyword&gt;
        ///        &lt;keyword&gt;auto&lt;/keyword&gt;
        ///        &lt;keyword&gt;bitand&lt;/keyword&gt;
        ///        &lt;keyword&gt;bitor&lt;/keyword&gt;
        ///        &lt;keyword&gt;break&lt;/keyword&gt;
        ///        &lt;keyword&gt;case&lt;/keyword&gt;
        ///        &lt;keyword&gt;catch&lt;/keywo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string cpp {
            get {
                return ResourceManager.GetString("cpp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;profile&gt;
        ///    &lt;delimiter&gt;()[]{}\|/+-=`~:!@#$%^ ,.;&quot;&apos;?&amp;gt;&amp;lt;&amp;#009;&lt;/delimiter&gt;
        ///    &lt;ignoreCase&gt;false&lt;/ignoreCase&gt;
        ///    
        ///    &lt;keywords name=&quot;keyword&quot; foreground=&quot;Blue&quot;&gt;
        ///        &lt;keyword&gt;abstract&lt;/keyword&gt;
        ///        &lt;keyword&gt;as&lt;/keyword&gt;
        ///        &lt;keyword&gt;base&lt;/keyword&gt;
        ///        &lt;keyword&gt;break&lt;/keyword&gt;
        ///        &lt;keyword&gt;by&lt;/keyword&gt;
        ///        &lt;keyword&gt;case&lt;/keyword&gt;
        ///        &lt;keyword&gt;catch&lt;/keyword&gt;
        ///        &lt;keyword&gt;checked&lt;/keyword&gt;
        ///        &lt;keyword&gt;class&lt;/keywo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string csharp {
            get {
                return ResourceManager.GetString("csharp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;profile&gt;
        ///    &lt;delimiter&gt;()[]{}\|/+-=:`~!@#$%^ ,.;&quot;&apos;?&amp;gt;&amp;lt;&amp;#009;&lt;/delimiter&gt;
        ///    &lt;ignoreCase&gt;true&lt;/ignoreCase&gt;
        ///    
        ///    &lt;keywords name=&quot;keyword&quot; foreground=&quot;Blue&quot;&gt;
        ///        &lt;keyword&gt;break&lt;/keyword&gt;
        ///        &lt;keyword&gt;const&lt;/keyword&gt;
        ///        &lt;keyword&gt;continue&lt;/keyword&gt;
        ///        &lt;keyword&gt;delete&lt;/keyword&gt;
        ///        &lt;keyword&gt;do&lt;/keyword&gt;
        ///        &lt;keyword&gt;while&lt;/keyword&gt;
        ///        &lt;keyword&gt;export&lt;/keyword&gt;
        ///        &lt;keyword&gt;for&lt;/keyword&gt;
        ///        &lt;keyword&gt;for&lt;/keywo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string javascript {
            get {
                return ResourceManager.GetString("javascript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;mappings&gt;
        ///    &lt;mapping extension=&quot;.cs&quot; profile=&quot;csharp&quot; /&gt;
        ///    &lt;mapping extension=&quot;.xml&quot; profile=&quot;xml&quot; /&gt;
        ///    &lt;mapping extension=&quot;.aspx&quot; profile=&quot;xml&quot; /&gt;
        ///    &lt;mapping extension=&quot;.config&quot; profile=&quot;xml&quot; /&gt;
        ///    &lt;mapping extension=&quot;.csproj&quot; profile=&quot;xml&quot; /&gt;
        ///    &lt;mapping extension=&quot;.resx&quot; profile=&quot;xml&quot; /&gt;
        ///    &lt;mapping extension=&quot;.ps1&quot; profile=&quot;powershell&quot; /&gt;
        ///    &lt;mapping extension=&quot;.cmd&quot; profile=&quot;bat&quot; /&gt;
        ///    &lt;mapping extension=&quot;.bat&quot; profile=&quot;bat&quot; /&gt;
        ///    &lt;mappi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string mapping {
            get {
                return ResourceManager.GetString("mapping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;profile&gt;
        ///    &lt;delimiter&gt;()[]{}\|/+-=`~!@#%^ ,.;&quot;&apos;?&amp;gt;&amp;lt;&lt;/delimiter&gt;
        ///    &lt;ignoreCase&gt;true&lt;/ignoreCase&gt;
        ///    
        ///    &lt;keywords name=&quot;keyword&quot; foreground=&quot;Blue&quot;&gt;
        ///        &lt;keyword&gt;elseif&lt;/keyword&gt;
        ///        &lt;keyword&gt;begin&lt;/keyword&gt;
        ///        &lt;keyword&gt;function&lt;/keyword&gt;
        ///        &lt;keyword&gt;for&lt;/keyword&gt;
        ///        &lt;keyword&gt;foreach&lt;/keyword&gt;
        ///        &lt;keyword&gt;return&lt;/keyword&gt;
        ///        &lt;keyword&gt;else&lt;/keyword&gt;
        ///        &lt;keyword&gt;trap&lt;/keyword&gt;
        ///        &lt;keyword&gt;while&lt;/keyword&gt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string powershell {
            get {
                return ResourceManager.GetString("powershell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;profile&gt;
        ///    &lt;delimiter&gt;()[]{}\|/+-=`~:!@#$%^ ,.;&quot;&apos;?&amp;gt;&amp;lt;&amp;#009;&lt;/delimiter&gt;
        ///    &lt;ignoreCase&gt;true&lt;/ignoreCase&gt;
        ///    
        ///    &lt;keywords name=&quot;keyword&quot; foreground=&quot;Blue&quot;&gt;
        ///        &lt;keyword&gt;ABSOLUTE&lt;/keyword&gt;
        ///        &lt;keyword&gt;ACTION&lt;/keyword&gt;
        ///        &lt;keyword&gt;ADA&lt;/keyword&gt;
        ///        &lt;keyword&gt;ADD&lt;/keyword&gt;
        ///        &lt;keyword&gt;ALL&lt;/keyword&gt;
        ///        &lt;keyword&gt;ALLOCATE&lt;/keyword&gt;
        ///        &lt;keyword&gt;ALTER&lt;/keyword&gt;
        ///        &lt;keyword&gt;AND&lt;/keyword&gt;
        ///        &lt;keyword&gt;ANY&lt;/keywor [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string sql {
            get {
                return ResourceManager.GetString("sql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
        ///&lt;profile&gt;
        ///    &lt;delimiter&gt;= &lt;/delimiter&gt;
        ///    &lt;backDelimiter&gt;&amp;lt;&lt;/backDelimiter&gt;
        ///    
        ///    &lt;multiLinesBlock name=&quot;cdata&quot; foreground=&quot;Gray&quot; wrapperForeground=&quot;Blue&quot;&gt;
        ///        &lt;escape&gt;&lt;/escape&gt;
        ///        &lt;start&gt;&amp;lt;![CDATA[&lt;/start&gt;
        ///        &lt;end&gt;]]&amp;gt;&lt;/end&gt;
        ///    &lt;/multiLinesBlock&gt;
        ///
        ///    &lt;multiLinesBlock name=&quot;string&quot; foreground=&quot;Red&quot; wrapperForeground=&quot;Blue&quot;&gt;
        ///        &lt;escape&gt;&lt;/escape&gt;
        ///        &lt;start&gt;&quot;&lt;/start&gt;
        ///        &lt;end&gt;&quot;&lt;/end&gt;
        ///    &lt;/multiLinesBlock&gt;
        ///    
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string xml {
            get {
                return ResourceManager.GetString("xml", resourceCulture);
            }
        }
    }
}
